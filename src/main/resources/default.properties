# This entry defines where the rdf files reside, i.e. the directory or a single file
dictionary.files.rdf.location=src/main/resources

# Defines the location of the Lucene Index
dictionary.lucene.location=lucene_index

# Defines if the Lucene Index should be cleaned on startup
dictionary.lucene.override_on_start=false

# Applies the named filters together with the given limit to the dictionary
# Current supported filter-names:
# * levenshtein
# * pagerank
#
# Example on how the filters are applied:
#   dictionary.filter.filters = levenshtein, pagerank
#   dictionary.filter.limit = 100, 50
#
# The Levenshtein-filter will be applied first and reduce the number ob candidates to a maximum of 100.
# After that PageRank-filter is applied and reduces the candidates to a max. of 50.
#
# The order of the "tuples" (filter, limit) does not matter, as the filter with the biggest limit is applied first.
# E.g. the following configuration produces the same results as the example above:
#   dictionary.filter.filters = pagerank, levenshtein
#   dictionary.filter.limit = 50, 100
#
dictionary.filter.filters=levenshtein, pagerank
dictionary.filter.limit=100, 50

# Applies the named energy function to the nodes.
# Current supported energy function-names:
# * levenshtein
# * pagerank
##
dictionary.energy_function=levenshtein

# Returns empty set if the relative explanation score of the results is under the given limit.
# The maximum possible explanation score is the number of words in the query.
# This means that e.g. a query has 4 words and the best result has an explanation score of 3 (words),
# the relative explanation score is 0.75.
sessa.relative_explanation_limit=1